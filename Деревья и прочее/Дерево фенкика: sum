struct FTree {
    vector<int> tree;
    void upd(int index, int x)
    {
        while (index < tree.size())
        {
            tree[index] += x;
            index |= index + 1;
        }
    }

    void build(const vector<int>& A)
    {
        tree.resize(A.size(), 0);
        for (int i = 0; i < A.size(); i++)
        {
            upd(i, A[i]);
        }
    }

    int get(int r)
    {
        int index = r;
        int ans = 0;
        while (index >= 0)
        {
            ans += tree[index];
            index = (index & (index + 1)) - 1;
        }
        return ans;
    }

    int get(int l, int r)
    {
        return get(r - 1) - get(l - 1);
    }
};
