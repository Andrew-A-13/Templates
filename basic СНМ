struct DSU {
    vector<int> next, size;
    DSU(int n)
    {
        next.resize(n);
        size.resize(n, 1);
        for (int i = 0; i < n; i++)
            next[i] = i;
    }
    int find(int x)
    {
        if (x == next[x])
            return x;
        return next[x] = find(next[x]);
    }
    void merge(int x, int y)
    {
        x = find(x); y = find(y);
        if (x != y)
        {
            if (size[x] < size[y])
                swap(x, y);
            next[y] = x;
            size[x] += size[y];
        }
    }
    bool same(int x, int y)
    {
        x = find(x); y = find(y);
        return x == y;
    }
};
